# Railway Configuration for Multiple Services
# https://docs.railway.app/reference/config-as-code
# 
# Estratégia: Ambos os serviços usam rootDirectory "." para manter o contexto do monorepo
# A diferenciação é feita através dos Dockerfiles específicos

# Middleware Service (Next.js API)
[services.middleware-api]
rootDirectory = "."

[services.middleware-api.build]
builder = "DOCKERFILE"
dockerfilePath = "Dockerfile.middleware-api"
buildCommand = "docker build -f Dockerfile.middleware-api -t middleware-api ."

[services.middleware-api.deploy]
# startCommand vazio para usar o CMD do Dockerfile
port = 8080
numReplicas = 1
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 3

[services.middleware-api.healthcheck]
path = "/api/health"
interval = 30
timeout = 5
retries = 3

# Workers Service (Background Jobs)
[services.workers]
rootDirectory = "."

[services.workers.build]
builder = "DOCKERFILE"
dockerfilePath = "Dockerfile.workers"
buildCommand = "docker build -f Dockerfile.workers -t workers ."

[services.workers.deploy]
# startCommand vazio para usar o CMD do Dockerfile
port = 4000
numReplicas = 1
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 3

[services.workers.healthcheck]
path = "/health"
interval = 30
timeout = 5
retries = 3